# This awk script modies the refer file generated by the biblio
# command so that
# 1) Additional authors or editors get the proper tag, %A or %E, and
# 2) That editors are treated as authors if the entry has no author
# 3) The number field, N, is translated to R in reports.

# Bug:  if there are no authors, "(ed.)" or "(eds.)" should be 
# appended to the last author.  


BEGIN { person="A"    	# person = A | E  (Author or Editor)
	RS="" 		# records separated by blank lines
	FS="%"		# fields separated by the % character (and newlines)
}  	
{ authors=0   		# assume authors is false, where 1=true
  report=0              # assume entry is not a technical report
  for (i=2; i <= NF; i++) {  # ignore empty field before first separator
	l = split ($i,f," ");
	if (f[1] ~ /&A/) {
		person="A";
		authors=1;
		printf("\n%%A ");
		for (n=2; n <= l; n++) printf("%s ", f[n]);
	} else if (f[1] ~ /&E/) {
		if (authors==1) { person="E" } else { person="A" };
		printf("\n%%%s ", person);
		for (n=2; n <= l; n++) printf("%s ", f[n]);
	} else if (f[1] ~ /&&/) {
		printf("\n%%%s ", person);
		for (n=2; n <= l; n++) printf("%s ", f[n]);
	} else if (f[1] ~ /&REPORT/) {
		report=1;	# entry is a report
		printf("\n%%L ");
		for (n=2; n <= l; n++) printf("%s ", f[n]);
	} else if (f[1] ~ /&N/) {
	 	if (report == 1) 
			printf("\n%%R ");
		else
			printf("\n%%N ");
		for (n=2; n <= l; n++) printf("%s ", f[n]);		
	} else if (f[1] ~ /&/) {
		printf("\n%");
		for (n=2; n <= l; n++) printf("%s ", f[n]);
	} else  {
		for (n=1; n <= l; n++) printf("%s ", f[n]);
		# printf("\n")
	}
  }
  printf("\n");
}
END {}

